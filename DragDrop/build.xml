<project name="gwt-dnd" default="dist">

	<!-- Global Properties -->
	<property environment="env" />

	<!-- gwt-dnd.version property -->
	<condition property="gwt-dnd.version" value="${env.GWT_DND_VERSION}" else="0.0.0">
		<isset property="env.GWT_DND_VERSION" />
	</condition>
	<fail unless="gwt-dnd.version" message="Please set gwt-dnd.version property" />

	<!-- build.host.platform property -->
	<condition property="build.host.islinux">
		<and>
			<os family="unix" />
			<not>
				<contains string="${os.name}" substring="mac" casesensitive="false" />
			</not>
		</and>
	</condition>
	<condition property="build.host.platform" value="linux">
		<isset property="build.host.islinux" />
	</condition>

	<condition property="build.host.ismac">
		<and>
			<os family="unix" />
			<contains string="${os.name}" substring="mac" casesensitive="false" />
		</and>
	</condition>
	<condition property="build.host.platform" value="mac">
		<isset property="build.host.ismac" />
	</condition>

	<condition property="build.host.iswindows">
		<os family="windows" />
	</condition>
	<condition property="build.host.platform" value="windows">
		<isset property="build.host.iswindows" />
	</condition>
	<fail unless="build.host.platform" message="Building on ${os.name} is not supported" />

	<condition property="junit.platform.args" value="-XstartOnFirstThread" else="">
		<equals arg1="${build.host.platform}" arg2="mac" casesensitive="false" />
	</condition>


	<!-- gwt.location property -->
	<condition property="gwt.location" value="${env.GWT_PLATFORM}">
		<isset property="env.GWT_PLATFORM" />
	</condition>
	<fail message="can't find gwt, please set gwt.location property" unless="gwt.location" />

	<!-- gwt.tools property -->
	<condition property="gwt.tools" value="${env.GWT_TOOLS}">
		<isset property="env.GWT_TOOLS" />
	</condition>
	<fail message="can't find gwt tools, please set gwt.tools property" unless="gwt.tools" />

	<!-- gwt tools stuff -->
	<condition property="gwt.tools.check" value="${env.GWT_TOOLS}" else="${gwt.root}/../tools">
		<isset property="env.GWT_TOOLS" />
	</condition>
	<property name="gwt.tools" location="${gwt.tools.check}" />
	<property name="gwt.tools.lib" location="${gwt.tools}/lib" />
	<property name="gwt.tools.antlib" location="${gwt.tools}/antlib" />

	<!-- javac defaults -->
	<property name="javac.debug" value="true" />
	<property name="javac.debuglevel" value="lines,vars,source" />
	<property name="javac.encoding" value="utf-8" />
	<property name="javac.source" value="1.4" />
	<property name="javac.nowarn" value="true" />

	<!-- gwt jars -->
	<property name="gwt.user.jar" location="${gwt.location}/gwt-user.jar" />
	<property name="gwt.dev.jar" location="${gwt.location}/gwt-dev-${build.host.platform}.jar" />

	<!-- Pulls in tasks defined in ant-contrib, i.e. foreach -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${gwt.tools.antlib}/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>


	<!-- Replace @GWT_DND_VERION@ with actuall version of build -->
	<target name="filter" description="Filters distro files for versioning">
		<mkdir dir="build/src" />
		<mkdir dir="build/demo" />

		<copy todir="build/src">
			<fileset file="LICENSE" />
			<fileset dir="src" />
			<filterset>
				<filter token="GWT_DND_VERSION" value="${gwt-dnd.version}" />
			</filterset>
		</copy>

		<copy todir="build/demo">
			<fileset dir="build/src" />
			<fileset dir="demo" />
			<filterset>
				<filter token="GWT_DND_VERSION" value="${gwt-dnd.version}" />
			</filterset>
		</copy>

	</target>

	<target name="build" depends="clean,filter">
		<mkdir dir="build/out/src" />
		<mkdir dir="build/out/demo" />

		<javac compiler="javac1.4" listfiles="true" destdir="build/out/src">
			<src path="build/src" />
			<classpath location="${gwt.location}/gwt-user.jar" />
			<classpath location="${gwt.location}/gwt-dev-${build.host.platform}.jar" />
		</javac>

		<javac compiler="javac1.4" listfiles="true" destdir="build/out/demo">
			<src path="build/demo" />
			<classpath location="${gwt.location}/gwt-user.jar" />
			<classpath location="${gwt.location}/gwt-dev-${build.host.platform}.jar" />
		</javac>

		<copy todir="build/out/src">
			<fileset dir="build/src">
        <include name="**/LICENSE" />
				<include name="**/*.java" />
				<include name="**/*.gwt.xml" />
        <include name="**/public/**" />
			</fileset>
		</copy>

		<copy todir="build/out/demo">
			<fileset dir="build/demo">
        <include name="**/LICENSE" />
        <include name="**/*.java" />
				<include name="**/*.gwt.xml" />
        <include name="**/public/**" />
			</fileset>
		</copy>

		<antcall target="gwtc" />
	</target>

	<target name="gwtc" description="Compile to JavaScript">
		<outofdate>
			<sourcefiles>
				<fileset dir="build/src" />
				<fileset dir="build/demo" />
				<fileset file="${gwt.user.jar}" />
				<fileset file="${gwt.dev.jar}" />
			</sourcefiles>

			<targetfiles path="build/www/com.allen_sauer.gwt.dnd.demo.DragDropDemo/DragDrop.nocache.html" />
			<sequential>
				<mkdir dir="build/www" />
				<java dir="build" classname="com.google.gwt.dev.GWTCompiler" classpath="build/src:build/demo:${gwt.user.jar}:${gwt.dev.jar}" fork="yes" failonerror="true">
					<arg value="-out" />
					<arg path="build/www" />

					<arg value="com.allen_sauer.gwt.dnd.demo.DragDropDemo" />

					<arg value="-style" />
					<arg value="PRETTY" />
				</java>
			</sequential>
		</outofdate>
	</target>

	<target name="javadoc">
		<javadoc access="protected" classpath="${gwt.user.jar}:{gwt.dev.jar}" destdir="build/javadoc" doctitle="gwt-dnd - Drag-and-drop for your Google-Web-Toolkit Projects" encoding="UTF-8" failonerror="true" source="1.4" sourcepath="build/demo" />
	</target>

	<target name="dist" depends="build,javadoc">
		<mkdir dir="build/dist" />

		<jar destfile="build/dist/gwt-dnd-${gwt-dnd.version}.jar">
			<fileset dir="build/out/src" />
		</jar>
		<jar basedir="build/javadoc" destfile="build/dist/gwt-dnd-${gwt-dnd.version}-javadoc.jar" />

		<copy todir="/fred/java/lib/gwt-dnd/">
			<fileset dir="build/dist" />
		</copy>
	</target>

	<target name="clean">
		<delete dir="build" />
	</target>

</project>
